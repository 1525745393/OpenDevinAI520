#!/bin/bash
# -*- coding: utf-8 -*-
# Êô∫ËÉΩÂΩ±ËßÜÊñá‰ª∂ÈáçÂëΩÂêçÂ∑•ÂÖ∑ - Â¢ûÂº∫ÁâàÂÆâË£ÖËÑöÊú¨
# ‰ΩúËÄÖ: OpenHands AI
# ÁâàÊú¨: 2.0.0
# ÊèèËø∞: Ëá™Âä®ÂÆâË£ÖÂíåÈÖçÁΩÆÂ¢ûÂº∫ÁâàÊô∫ËÉΩÂΩ±ËßÜÊñá‰ª∂ÈáçÂëΩÂêçÂ∑•ÂÖ∑

set -e  # ÈÅáÂà∞ÈîôËØØÁ´ãÂç≥ÈÄÄÂá∫

# È¢úËâ≤ÂÆö‰πâ
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# ÊâìÂç∞Â∏¶È¢úËâ≤ÁöÑÊ∂àÊÅØ
print_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_highlight() {
    echo -e "${PURPLE}[HIGHLIGHT]${NC} $1"
}

print_step() {
    echo -e "${CYAN}[STEP]${NC} $1"
}

# Ê£ÄÊµãÊìç‰ΩúÁ≥ªÁªü
detect_os() {
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        if grep -q "synology" /proc/version 2>/dev/null; then
            OS="synology"
        else
            OS="linux"
        fi
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        OS="macos"
    elif [[ "$OSTYPE" == "cygwin" ]] || [[ "$OSTYPE" == "msys" ]]; then
        OS="windows"
    else
        OS="unknown"
    fi
    
    print_info "Ê£ÄÊµãÂà∞Êìç‰ΩúÁ≥ªÁªü: $OS"
}

# Ê£ÄÊü•PythonÁéØÂ¢É
check_python() {
    print_step "Ê£ÄÊü•PythonÁéØÂ¢É..."
    
    if command -v python3 &> /dev/null; then
        PYTHON_CMD="python3"
        PYTHON_VERSION=$(python3 --version 2>&1 | cut -d' ' -f2)
        print_success "ÊâæÂà∞Python3: $PYTHON_VERSION"
    elif command -v python &> /dev/null; then
        PYTHON_VERSION=$(python --version 2>&1 | cut -d' ' -f2)
        if [[ $PYTHON_VERSION == 3.* ]]; then
            PYTHON_CMD="python"
            print_success "ÊâæÂà∞Python: $PYTHON_VERSION"
        else
            print_error "ÈúÄË¶ÅPython 3.6ÊàñÊõ¥È´òÁâàÊú¨ÔºåÂΩìÂâçÁâàÊú¨: $PYTHON_VERSION"
            exit 1
        fi
    else
        print_error "Êú™ÊâæÂà∞PythonÔºåËØ∑ÂÖàÂÆâË£ÖPython 3.6ÊàñÊõ¥È´òÁâàÊú¨"
        exit 1
    fi
    
    # Ê£ÄÊü•PythonÁâàÊú¨ÊòØÂê¶Êª°Ë∂≥Ë¶ÅÊ±Ç
    PYTHON_MAJOR=$(echo $PYTHON_VERSION | cut -d. -f1)
    PYTHON_MINOR=$(echo $PYTHON_VERSION | cut -d. -f2)
    
    if [ "$PYTHON_MAJOR" -lt 3 ] || ([ "$PYTHON_MAJOR" -eq 3 ] && [ "$PYTHON_MINOR" -lt 6 ]); then
        print_error "ÈúÄË¶ÅPython 3.6ÊàñÊõ¥È´òÁâàÊú¨ÔºåÂΩìÂâçÁâàÊú¨: $PYTHON_VERSION"
        exit 1
    fi
}

# Ê£ÄÊü•ÁΩëÁªúËøûÊé•
check_network() {
    print_step "Ê£ÄÊü•ÁΩëÁªúËøûÊé•..."
    
    # ÊµãËØïTMDbËøûÊé•
    if curl -s --connect-timeout 5 "https://api.themoviedb.org/3" > /dev/null 2>&1; then
        print_success "TMDb APIËøûÊé•Ê≠£Â∏∏"
        TMDB_AVAILABLE=true
    else
        print_warning "TMDb APIËøûÊé•Â§±Ë¥•ÔºåÂèØËÉΩÂΩ±ÂìçÂÖÉÊï∞ÊçÆËé∑ÂèñÂäüËÉΩ"
        TMDB_AVAILABLE=false
    fi
    
    # ÊµãËØïË±ÜÁì£ËøûÊé•
    if curl -s --connect-timeout 5 "https://movie.douban.com" > /dev/null 2>&1; then
        print_success "Ë±ÜÁì£ËøûÊé•Ê≠£Â∏∏"
        DOUBAN_AVAILABLE=true
    else
        print_warning "Ë±ÜÁì£ËøûÊé•Â§±Ë¥•ÔºåÂèØËÉΩÂΩ±Âìç‰∏≠ÊñáÂÖÉÊï∞ÊçÆËé∑Âèñ"
        DOUBAN_AVAILABLE=false
    fi
    
    if [ "$TMDB_AVAILABLE" = false ] && [ "$DOUBAN_AVAILABLE" = false ]; then
        print_warning "ÁΩëÁªúËøûÊé•ÂèØËÉΩÂ≠òÂú®ÈóÆÈ¢òÔºåAPIÂäüËÉΩÂèØËÉΩÊó†Ê≥ïÊ≠£Â∏∏‰ΩøÁî®"
        read -p "ÊòØÂê¶ÁªßÁª≠ÂÆâË£ÖÔºü(y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            print_info "ÂÆâË£ÖÂ∑≤ÂèñÊ∂à"
            exit 0
        fi
    fi
}

# ÂàõÂª∫ÂÆâË£ÖÁõÆÂΩï
create_install_dir() {
    print_step "ÂàõÂª∫ÂÆâË£ÖÁõÆÂΩï..."
    
    case $OS in
        "synology")
            INSTALL_DIR="/volume1/python_apps/enhanced_video_renamer"
            ;;
        "linux"|"macos")
            INSTALL_DIR="$HOME/enhanced_video_renamer"
            ;;
        "windows")
            INSTALL_DIR="$HOME/enhanced_video_renamer"
            ;;
        *)
            INSTALL_DIR="./enhanced_video_renamer"
            ;;
    esac
    
    if [ -d "$INSTALL_DIR" ]; then
        print_warning "ÂÆâË£ÖÁõÆÂΩïÂ∑≤Â≠òÂú®: $INSTALL_DIR"
        read -p "ÊòØÂê¶Ë¶ÜÁõñÁé∞ÊúâÂÆâË£ÖÔºü(y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            print_info "ÂÆâË£ÖÂ∑≤ÂèñÊ∂à"
            exit 0
        fi
        rm -rf "$INSTALL_DIR"
    fi
    
    mkdir -p "$INSTALL_DIR"
    print_success "ÂàõÂª∫ÂÆâË£ÖÁõÆÂΩï: $INSTALL_DIR"
}

# Â§çÂà∂Êñá‰ª∂
copy_files() {
    print_step "Â§çÂà∂Á®ãÂ∫èÊñá‰ª∂..."
    
    # Ê£ÄÊü•ÂøÖÈúÄÊñá‰ª∂
    required_files=(
        "video_renamer.py"
        "video_renamer_enhanced.py"
        "video_renamer_enhanced_demo.py"
        "API_SETUP_GUIDE.md"
        "VIDEO_RENAMER_README.md"
    )
    
    for file in "${required_files[@]}"; do
        if [ ! -f "$file" ]; then
            print_error "Áº∫Â∞ëÂøÖÈúÄÊñá‰ª∂: $file"
            exit 1
        fi
    done
    
    # Â§çÂà∂‰∏ªÁ®ãÂ∫èÊñá‰ª∂
    cp video_renamer.py "$INSTALL_DIR/"
    cp video_renamer_enhanced.py "$INSTALL_DIR/"
    cp video_renamer_enhanced_demo.py "$INSTALL_DIR/"
    
    # Â§çÂà∂ÊñáÊ°£Êñá‰ª∂
    cp API_SETUP_GUIDE.md "$INSTALL_DIR/"
    cp VIDEO_RENAMER_README.md "$INSTALL_DIR/"
    
    # Â§çÂà∂ÂÖ∂‰ªñÊñá‰ª∂ÔºàÂ¶ÇÊûúÂ≠òÂú®Ôºâ
    [ -f "README.md" ] && cp README.md "$INSTALL_DIR/"
    [ -f "INSTALL.md" ] && cp INSTALL.md "$INSTALL_DIR/"
    
    # ËÆæÁΩÆÊâßË°åÊùÉÈôê
    chmod +x "$INSTALL_DIR/video_renamer.py"
    chmod +x "$INSTALL_DIR/video_renamer_enhanced.py"
    chmod +x "$INSTALL_DIR/video_renamer_enhanced_demo.py"
    
    print_success "Á®ãÂ∫èÊñá‰ª∂Â§çÂà∂ÂÆåÊàê"
}

# ÂàõÂª∫ÂêØÂä®ËÑöÊú¨
create_launcher() {
    print_step "ÂàõÂª∫ÂêØÂä®ËÑöÊú¨..."
    
    # ÂàõÂª∫Âü∫Á°ÄÁâàÂêØÂä®ËÑöÊú¨
    cat > "$INSTALL_DIR/start_basic_renamer.sh" << EOF
#!/bin/bash
# Êô∫ËÉΩÂΩ±ËßÜÊñá‰ª∂ÈáçÂëΩÂêçÂ∑•ÂÖ∑ - Âü∫Á°ÄÁâàÂêØÂä®ËÑöÊú¨

cd "\$(dirname "\$0")"
$PYTHON_CMD video_renamer.py
EOF
    
    # ÂàõÂª∫Â¢ûÂº∫ÁâàÂêØÂä®ËÑöÊú¨
    cat > "$INSTALL_DIR/start_enhanced_renamer.sh" << EOF
#!/bin/bash
# Êô∫ËÉΩÂΩ±ËßÜÊñá‰ª∂ÈáçÂëΩÂêçÂ∑•ÂÖ∑ - Â¢ûÂº∫ÁâàÂêØÂä®ËÑöÊú¨

cd "\$(dirname "\$0")"
$PYTHON_CMD video_renamer_enhanced.py
EOF
    
    # ÂàõÂª∫ÊºîÁ§∫ËÑöÊú¨
    cat > "$INSTALL_DIR/start_enhanced_demo.sh" << EOF
#!/bin/bash
# Êô∫ËÉΩÂΩ±ËßÜÊñá‰ª∂ÈáçÂëΩÂêçÂ∑•ÂÖ∑ - Â¢ûÂº∫ÁâàÊºîÁ§∫ËÑöÊú¨

cd "\$(dirname "\$0")"
$PYTHON_CMD video_renamer_enhanced_demo.py
EOF
    
    # ÂàõÂª∫APIÈÖçÁΩÆÂä©ÊâãËÑöÊú¨
    cat > "$INSTALL_DIR/setup_api.sh" << EOF
#!/bin/bash
# APIÈÖçÁΩÆÂä©ÊâãËÑöÊú¨

echo "üîß APIÈÖçÁΩÆÂä©Êâã"
echo "=============="
echo
echo "1. TMDb APIÈÖçÁΩÆ:"
echo "   ËÆøÈóÆ: https://www.themoviedb.org/settings/api"
echo "   Ê≥®ÂÜåË¥¶Êà∑Âπ∂Ëé∑ÂèñAPIÂØÜÈí•"
echo
echo "2. ÂêØÂä®Â¢ûÂº∫ÁâàÂ∑•ÂÖ∑:"
echo "   ./start_enhanced_renamer.sh"
echo
echo "3. Âú®Á®ãÂ∫è‰∏≠ÈÖçÁΩÆAPI:"
echo "   ÈÄâÊã©ËèúÂçï: 4 -> 1 -> ËæìÂÖ•APIÂØÜÈí•"
echo
echo "4. ÊµãËØïAPIËøûÊé•:"
echo "   ÈÄâÊã©ËèúÂçï: 5"
echo
read -p "ÊåâÂõûËΩ¶ÈîÆÁªßÁª≠..."
./start_enhanced_renamer.sh
EOF
    
    chmod +x "$INSTALL_DIR/start_basic_renamer.sh"
    chmod +x "$INSTALL_DIR/start_enhanced_renamer.sh"
    chmod +x "$INSTALL_DIR/start_enhanced_demo.sh"
    chmod +x "$INSTALL_DIR/setup_api.sh"
    
    print_success "ÂêØÂä®ËÑöÊú¨ÂàõÂª∫ÂÆåÊàê"
}

# ÂàõÂª∫ÈÖçÁΩÆÁõÆÂΩï
create_config_dirs() {
    print_step "ÂàõÂª∫ÈÖçÁΩÆÁõÆÂΩï..."
    
    # ÂàõÂª∫ÂÖÉÊï∞ÊçÆÁõÆÂΩï
    mkdir -p "$INSTALL_DIR/metadata"
    mkdir -p "$INSTALL_DIR/metadata/posters"
    mkdir -p "$INSTALL_DIR/logs"
    
    # ÂàõÂª∫Á§∫‰æãÈÖçÁΩÆÊñá‰ª∂
    cat > "$INSTALL_DIR/api_config_example.json" << 'EOF'
{
  "api_settings": {
    "tmdb": {
      "enabled": true,
      "api_key": "your_tmdb_api_key_here",
      "language": "zh-CN",
      "region": "CN"
    },
    "douban": {
      "enabled": true
    },
    "general": {
      "timeout": 10,
      "retry_count": 3,
      "rate_limit_delay": 1.0,
      "cache_enabled": true,
      "cache_expire_days": 7
    }
  },
  "metadata_settings": {
    "fetch_metadata": true,
    "generate_nfo": true,
    "download_posters": true,
    "download_fanart": true,
    "prefer_chinese_title": true,
    "fallback_to_original": true,
    "metadata_priority": ["tmdb", "douban"],
    "poster_size": "w500",
    "fanart_size": "w1280"
  }
}
EOF
    
    print_success "ÈÖçÁΩÆÁõÆÂΩïÂàõÂª∫ÂÆåÊàê"
}

# ÂàõÂª∫Ê°åÈù¢Âø´Êç∑ÊñπÂºè (‰ªÖÈôêLinuxÂíåmacOS)
create_desktop_shortcut() {
    if [[ "$OS" == "linux" ]] && command -v desktop-file-install &> /dev/null; then
        print_step "ÂàõÂª∫Ê°åÈù¢Âø´Êç∑ÊñπÂºè..."
        
        # Âü∫Á°ÄÁâàÂø´Êç∑ÊñπÂºè
        cat > "$HOME/.local/share/applications/video-renamer-basic.desktop" << EOF
[Desktop Entry]
Version=1.0
Type=Application
Name=Êô∫ËÉΩÂΩ±ËßÜÈáçÂëΩÂêçÂ∑•ÂÖ∑ (Âü∫Á°ÄÁâà)
Comment=Ë∑®Âπ≥Âè∞ÂΩ±ËßÜÊñá‰ª∂Êô∫ËÉΩÈáçÂëΩÂêçÂ∑•ÂÖ∑
Exec=$INSTALL_DIR/start_basic_renamer.sh
Icon=video-x-generic
Terminal=true
Categories=AudioVideo;Video;
EOF
        
        # Â¢ûÂº∫ÁâàÂø´Êç∑ÊñπÂºè
        cat > "$HOME/.local/share/applications/video-renamer-enhanced.desktop" << EOF
[Desktop Entry]
Version=1.0
Type=Application
Name=Êô∫ËÉΩÂΩ±ËßÜÈáçÂëΩÂêçÂ∑•ÂÖ∑ (Â¢ûÂº∫Áâà)
Comment=ÈõÜÊàêAPIÁöÑÊô∫ËÉΩÂΩ±ËßÜÊñá‰ª∂ÈáçÂëΩÂêçÂ∑•ÂÖ∑
Exec=$INSTALL_DIR/start_enhanced_renamer.sh
Icon=video-x-generic
Terminal=true
Categories=AudioVideo;Video;
EOF
        
        print_success "Ê°åÈù¢Âø´Êç∑ÊñπÂºèÂàõÂª∫ÂÆåÊàê"
    fi
}

# Áæ§Êôñ‰∏ìÁî®ËÆæÁΩÆ
setup_synology() {
    if [[ "$OS" == "synology" ]]; then
        print_step "ÈÖçÁΩÆÁæ§Êôñ‰∏ìÁî®ËÆæÁΩÆ..."
        
        # ÂàõÂª∫Video StationÁõÆÂΩïÈìæÊé•
        if [ -d "/volume1/video" ]; then
            ln -sf "/volume1/video" "$INSTALL_DIR/video_station"
            print_success "ÂàõÂª∫Video StationÁõÆÂΩïÈìæÊé•"
        fi
        
        # ÂàõÂª∫Áæ§Êôñ‰ªªÂä°ËÆ°ÂàíËÑöÊú¨
        cat > "$INSTALL_DIR/synology_task.sh" << EOF
#!/bin/bash
# Áæ§Êôñ‰ªªÂä°ËÆ°ÂàíËÑöÊú¨
# Áî®‰∫éÂÆöÊúüËá™Âä®ÈáçÂëΩÂêçÊñ∞Â¢ûÁöÑËßÜÈ¢ëÊñá‰ª∂

RENAMER_DIR="$INSTALL_DIR"
VIDEO_DIR="/volume1/video"
LOG_FILE="\$RENAMER_DIR/logs/auto_rename.log"

echo "\$(date): ÂºÄÂßãËá™Âä®ÈáçÂëΩÂêç‰ªªÂä°" >> "\$LOG_FILE"

# Ê£ÄÊü•Êñ∞Â¢ûÊñá‰ª∂Âπ∂ÈáçÂëΩÂêç
cd "\$RENAMER_DIR"
$PYTHON_CMD video_renamer_enhanced.py --auto-mode --directory "\$VIDEO_DIR" >> "\$LOG_FILE" 2>&1

echo "\$(date): Ëá™Âä®ÈáçÂëΩÂêç‰ªªÂä°ÂÆåÊàê" >> "\$LOG_FILE"
EOF
        
        chmod +x "$INSTALL_DIR/synology_task.sh"
        
        # ËÆæÁΩÆÊùÉÈôê
        chown -R admin:users "$INSTALL_DIR" 2>/dev/null || true
        
        print_success "Áæ§ÊôñËÆæÁΩÆÂÆåÊàê"
        print_info "ÂèØÂú®ÊéßÂà∂Èù¢Êùø -> ‰ªªÂä°ËÆ°Âàí‰∏≠Ê∑ªÂä†ÂÆöÊúüÊâßË°åËÑöÊú¨: $INSTALL_DIR/synology_task.sh"
    fi
}

# ËøêË°åÂàùÂßãÂåñ
run_initialization() {
    print_step "ËøêË°åÂàùÂßãÂåñ..."
    
    cd "$INSTALL_DIR"
    
    # ËøêË°åÂü∫Á°ÄÁâàÁ®ãÂ∫èÁîüÊàêÈÖçÁΩÆÊñá‰ª∂
    echo "6" | timeout 10 $PYTHON_CMD video_renamer.py > /dev/null 2>&1 || true
    
    # ËøêË°åÂ¢ûÂº∫ÁâàÁ®ãÂ∫èÁîüÊàêÈÖçÁΩÆÊñá‰ª∂
    echo "8" | timeout 10 $PYTHON_CMD video_renamer_enhanced.py > /dev/null 2>&1 || true
    
    if [ -f "video_renamer_config.json" ]; then
        print_success "Âü∫Á°ÄÁâàÈÖçÁΩÆÊñá‰ª∂ÂàùÂßãÂåñÂÆåÊàê"
    fi
    
    if [ -f "video_renamer_enhanced_config.json" ]; then
        print_success "Â¢ûÂº∫ÁâàÈÖçÁΩÆÊñá‰ª∂ÂàùÂßãÂåñÂÆåÊàê"
    fi
}

# ÊòæÁ§∫APIÈÖçÁΩÆÊåáÂçó
show_api_guide() {
    print_highlight "üìñ APIÈÖçÁΩÆÊåáÂçó"
    echo "=================================================================="
    echo
    echo "üåê TMDb APIÈÖçÁΩÆ (Êé®Ëçê):"
    echo "   1. ËÆøÈóÆ: https://www.themoviedb.org/settings/api"
    echo "   2. Ê≥®ÂÜåÂÖçË¥πË¥¶Êà∑"
    echo "   3. Áî≥ËØ∑APIÂØÜÈí•"
    echo "   4. Âú®Á®ãÂ∫è‰∏≠ÈÖçÁΩÆ: ËèúÂçï 4 -> 1 -> ËæìÂÖ•ÂØÜÈí•"
    echo
    echo "üé≠ Ë±ÜÁì£APIÈÖçÁΩÆ:"
    echo "   1. Êó†ÈúÄÊ≥®ÂÜåÔºåÁõ¥Êé•ÂêØÁî®"
    echo "   2. Âú®Á®ãÂ∫è‰∏≠ÂêØÁî®: ËèúÂçï 4 -> 2"
    echo "   3. Ê≥®ÊÑèËÆøÈóÆÈ¢ëÁéáÈôêÂà∂"
    echo
    echo "üîß ÈÖçÁΩÆÂª∫ËÆÆ:"
    echo "   ‚Ä¢ ÂêåÊó∂ÂêØÁî®TMDbÂíåË±ÜÁì£APIËé∑ÂæóÊúÄ‰Ω≥ÊïàÊûú"
    echo "   ‚Ä¢ TMDbÊèê‰æõÂõΩÈôÖÊï∞ÊçÆÔºåË±ÜÁì£Êèê‰æõ‰∏≠ÊñáÊï∞ÊçÆ"
    echo "   ‚Ä¢ È¶ñÊ¨°‰ΩøÁî®Âª∫ËÆÆÂÖàÊµãËØïAPIËøûÊé•"
    echo
    echo "=================================================================="
}

# ÊòæÁ§∫ÂÆâË£ÖÂÆåÊàê‰ø°ÊÅØ
show_completion_info() {
    echo
    echo "=================================================================="
    print_success "üéâ Êô∫ËÉΩÂΩ±ËßÜÊñá‰ª∂ÈáçÂëΩÂêçÂ∑•ÂÖ∑ - Â¢ûÂº∫ÁâàÂÆâË£ÖÂÆåÊàêÔºÅ"
    echo "=================================================================="
    echo
    print_info "üìÅ ÂÆâË£Ö‰ΩçÁΩÆ: $INSTALL_DIR"
    print_info "üíª Êìç‰ΩúÁ≥ªÁªü: $OS"
    print_info "üêç PythonÁâàÊú¨: $PYTHON_VERSION"
    print_info "üåê ÁΩëÁªúÁä∂ÊÄÅ: TMDb:${TMDB_AVAILABLE:-Êú™Áü•} | Ë±ÜÁì£:${DOUBAN_AVAILABLE:-Êú™Áü•}"
    echo
    print_highlight "üöÄ ÂêØÂä®ÊñπÂºè:"
    echo "   Âü∫Á°ÄÁâà: cd $INSTALL_DIR && ./start_basic_renamer.sh"
    echo "   Â¢ûÂº∫Áâà: cd $INSTALL_DIR && ./start_enhanced_renamer.sh"
    echo "   ÊºîÁ§∫Áâà: cd $INSTALL_DIR && ./start_enhanced_demo.sh"
    echo "   APIÈÖçÁΩÆ: cd $INSTALL_DIR && ./setup_api.sh"
    echo
    print_highlight "üìñ ÊñáÊ°£ËØ¥Êòé:"
    echo "   APIÈÖçÁΩÆÊåáÂçó: $INSTALL_DIR/API_SETUP_GUIDE.md"
    echo "   ‰ΩøÁî®ËØ¥Êòé: $INSTALL_DIR/VIDEO_RENAMER_README.md"
    echo "   ÈÖçÁΩÆÁ§∫‰æã: $INSTALL_DIR/api_config_example.json"
    echo
    print_highlight "üÜï Â¢ûÂº∫ÁâàÊñ∞ÂäüËÉΩ:"
    echo "   ‚Ä¢ TMDb APIÈõÜÊàê - Ëé∑ÂèñÂõΩÈôÖÂΩ±ËßÜÊï∞ÊçÆ"
    echo "   ‚Ä¢ Ë±ÜÁì£APIÈõÜÊàê - Ëé∑Âèñ‰∏≠ÊñáÂΩ±ËßÜÊï∞ÊçÆ"
    echo "   ‚Ä¢ NFOÊñá‰ª∂ÁîüÊàê - ÊîØÊåÅÂ™í‰Ωì‰∏≠ÂøÉ"
    echo "   ‚Ä¢ Êµ∑Êä•Ëá™Âä®‰∏ãËΩΩ - ÂÆåÊï¥Â™í‰ΩìÂ∫ì‰ΩìÈ™å"
    echo "   ‚Ä¢ Êô∫ËÉΩÂÖÉÊï∞ÊçÆÂåπÈÖç - Ëá™Âä®ÈÄâÊã©ÊúÄ‰Ω≥ÁªìÊûú"
    echo "   ‚Ä¢ ÂÖÉÊï∞ÊçÆÁºìÂ≠ò - ÈÅøÂÖçÈáçÂ§çAPIË∞ÉÁî®"
    echo
    
    case $OS in
        "synology")
            print_highlight "üè† Áæ§ÊôñÁî®Êà∑ÊèêÁ§∫:"
            echo "   ‚Ä¢ ÂèØÈÄöËøáSSHËøûÊé•ËøêË°åÁ®ãÂ∫è"
            echo "   ‚Ä¢ ÊîØÊåÅVideo StationÁõÆÂΩïÁªìÊûÑ"
            echo "   ‚Ä¢ ÂèØËÆæÁΩÆ‰ªªÂä°ËÆ°ÂàíËá™Âä®Â§ÑÁêÜÊñ∞Êñá‰ª∂"
            echo "   ‚Ä¢ ‰ªªÂä°ËÑöÊú¨: $INSTALL_DIR/synology_task.sh"
            ;;
        "linux")
            if [ -f "$HOME/.local/share/applications/video-renamer-enhanced.desktop" ]; then
                print_highlight "üñ•Ô∏è Ê°åÈù¢Âø´Êç∑ÊñπÂºèÂ∑≤ÂàõÂª∫"
            fi
            ;;
        "macos")
            print_highlight "üçé macOSÁî®Êà∑ÊèêÁ§∫:"
            echo "   ‚Ä¢ ÂèØÈÄöËøáÁªàÁ´ØËøêË°åÁ®ãÂ∫è"
            echo "   ‚Ä¢ ÊîØÊåÅÊãñÊãΩÊñá‰ª∂Â§πÊìç‰Ωú"
            ;;
    esac
    
    echo
    print_highlight "üí° ‰ΩøÁî®Âª∫ËÆÆ:"
    echo "   1. È¶ñÊ¨°‰ΩøÁî®Âª∫ËÆÆËøêË°åÊºîÁ§∫Á®ãÂ∫èÁÜüÊÇâÂäüËÉΩ"
    echo "   2. ÈÖçÁΩÆAPIÂØÜÈí•‰ª•Ëé∑ÂæóÊúÄ‰Ω≥ÈáçÂëΩÂêçÊïàÊûú"
    echo "   3. ÈáçË¶ÅÊñá‰ª∂Âª∫ËÆÆÂÖàÂ§á‰ªΩ"
    echo "   4. ‰ΩøÁî®È¢ÑËßàÊ®°ÂºèÁ°ÆËÆ§ÈáçÂëΩÂêçÁªìÊûú"
    echo "   5. ÁΩëÁªú‰∏çÁ®≥ÂÆöÊó∂ÂèØÁ¶ÅÁî®APIÂäüËÉΩ"
    echo
    echo "=================================================================="
    
    # ÊòæÁ§∫APIÈÖçÁΩÆÊåáÂçó
    show_api_guide()
    
    # ËØ¢ÈóÆÊòØÂê¶Á´ãÂç≥ÈÖçÁΩÆAPI
    read -p "ÊòØÂê¶Á´ãÂç≥ÈÖçÁΩÆAPIÔºü(y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        cd "$INSTALL_DIR"
        ./setup_api.sh
    else
        # ËØ¢ÈóÆÊòØÂê¶ËøêË°åÊºîÁ§∫
        read -p "ÊòØÂê¶ËøêË°åÊºîÁ§∫Á®ãÂ∫èÔºü(y/N): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            cd "$INSTALL_DIR"
            $PYTHON_CMD video_renamer_enhanced_demo.py
        fi
    fi
}

# ‰∏ªÂÆâË£ÖÊµÅÁ®ã
main() {
    echo "üé¨ Êô∫ËÉΩÂΩ±ËßÜÊñá‰ª∂ÈáçÂëΩÂêçÂ∑•ÂÖ∑ - Â¢ûÂº∫ÁâàËá™Âä®ÂÆâË£ÖËÑöÊú¨"
    echo "   ‰ΩúËÄÖ: OpenHands AI"
    echo "   ÁâàÊú¨: 2.0.0"
    echo "   ÂäüËÉΩ: APIÈõÜÊàê„ÄÅÂÖÉÊï∞ÊçÆËé∑Âèñ„ÄÅNFOÁîüÊàê„ÄÅÊµ∑Êä•‰∏ãËΩΩ"
    echo
    
    # Ê£ÄÊü•ÊòØÂê¶Âú®Ê≠£Á°ÆÁöÑÁõÆÂΩï
    if [ ! -f "video_renamer_enhanced.py" ]; then
        print_error "ËØ∑Âú®ÂåÖÂê´video_renamer_enhanced.pyÁöÑÁõÆÂΩï‰∏≠ËøêË°åÊ≠§ËÑöÊú¨"
        exit 1
    fi
    
    # ÊâßË°åÂÆâË£ÖÊ≠•È™§
    detect_os
    check_python
    check_network
    create_install_dir
    copy_files
    create_launcher
    create_config_dirs
    create_desktop_shortcut
    setup_synology
    run_initialization
    show_completion_info
}

# ÈîôËØØÂ§ÑÁêÜ
trap 'print_error "ÂÆâË£ÖËøáÁ®ã‰∏≠ÂèëÁîüÈîôËØØÔºåËØ∑Ê£ÄÊü•ÈîôËØØ‰ø°ÊÅØ"; exit 1' ERR

# ËøêË°å‰∏ªÂáΩÊï∞
main "$@"